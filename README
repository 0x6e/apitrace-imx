				   API Trace


= Copyright =

Copyright 2008-2009 VMware, Inc.
All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


= About =

Wrapper DLLs to trace D3D8, D3D9, and OpenGL APIs calls.

Based on the idea from Michael Koch. 

See also:
* http://www.mikoweb.eu/index.php?node=21
* http://www.codeguru.com/cpp/g-m/directx/directx8/article.php/c11453/
* http://doc.51windows.net/Directx9_SDK/?url=/directx9_sdk/graphics/programmingguide/TutorialsAndSamplesAndToolsAndTips/Tools/D3DSpy.htm


= Status =

* Only Direct3D 8 and 9 are supported at the moment.
* It has not been tested with many applications. Bugs may cause the application to crash. 


= Building from source =


== MSVC ==

Requirements:
* Python (tested with version 2.5)
* SCons (tested with 0.98.4)
* Microsoft Visual Studio (tested with 2005 version)
* Microsoft DirectX SDK (tested with August 2007 release)

Instructions:

* Invoke scons:

 scons debug=no dxsdk=C:\DXSDK
 

== MinGW crosscompiler == 

Requirements:
* apt-get install mingw32

Intructions:

  scons platform=windows machine=x86 toolchain=crossmingw opengl32.dll


= Usage =

* Copy d3d8.dll, d3d9.dll, or opengl32.dll and apitrace.xsl to the directory with the application you want to trace.
* Run the application.
* Decompress the output .xml.gz and open the XML with Firefox or Internet Explorer to view the log. On Firefox hover on the arguments to see their contents.
* For long XML files is better to use xml2txt.py script directly on the .xml.gz file, as:

  python xml2txt.py d3d9.xml.gz > d3d9.log

See also http://jrfonseca.blogspot.com/2008/07/tracing-d3d-applications.html
