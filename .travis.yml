language: cpp

env:
  global:
  - MAKEFLAGS=-j2

matrix:
  fast_finish: true
  include:
  - compiler: gcc
    env:
    - APT_REPOS="ppa:ubuntu-sdk-team/ppa"
    - APT_PACKAGES="libdwarf-dev libproc-dev qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev"
    - CMAKE_OPTIONS="-DENABLE_GUI=1"
  - compiler: gcc
    env:
    - APT_PACKAGES="gcc-multilib g++-multilib"
    - CMAKE_OPTIONS="-DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_SYSTEM_LIBRARY_PATH=/usr/lib32 -DENABLE_GUI=0"
  - compiler: clang
    env:
    - APT_PACKAGES="libdwarf-dev libproc-dev"
    - CMAKE_OPTIONS="-DENABLE_GUI=0"
  - compiler: ": mingw32"
    env:
    - APT_PACKAGES="binutils-mingw-w64-i686 gcc-mingw-w64-i686 g++-mingw-w64-i686"
    - MINGW_PREFIX=i686-w64-mingw32
    - CMAKE_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=Toolchain.cmake -Cdxsdk-master/Cache-mingw32.cmake -DENABLE_GUI=0"

before_install:
- sudo add-apt-repository -y ppa:kalakris/cmake
- for APT_REPO in $APT_REPOS; do sudo add-apt-repository -y $APT_REPO; done
- sudo apt-get update -qq
- sudo apt-get install -qq -y cmake
- if [ "$APT_PACKAGES" ]; then sudo apt-get install -qq -y $APT_PACKAGES; fi

script:
- |
    if [ "$MINGW_PREFIX" ]
    then
      echo "set (CMAKE_SYSTEM_NAME Windows)" >> Toolchain.cmake
      echo "set (CMAKE_C_COMPILER $MINGW_PREFIX-gcc)" >> Toolchain.cmake
      echo "set (CMAKE_CXX_COMPILER $MINGW_PREFIX-g++)" >> Toolchain.cmake
      echo "set (CMAKE_RC_COMPILER $MINGW_PREFIX-windres)" >> Toolchain.cmake
      echo "set (CMAKE_FIND_ROOT_PATH /usr/$MINGW_PREFIX)" >> Toolchain.cmake
      echo "set (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)" >> Toolchain.cmake
      echo "set (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)" >> Toolchain.cmake
      echo "set (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)" >> Toolchain.cmake
      wget -q -O - https://github.com/apitrace/dxsdk/archive/master.tar.gz | tar -xz
    fi
- cmake -H. -Bbuild $CMAKE_OPTIONS
- cmake --build build --use-stderr -- -k all package

# vim: set sw=2 et :
